# 변수 : 데이터를 저장하는 기술
# 함수 : 코드를 묶는 기술
# 클래스 : 변수와 함수를 묶는 기술

# 클래스 기반 프로그래밍 -- 객체지향기법
# 왜 만듦? 초보자한테 일을 시키려고
# 함수를 만들 능력이 없는 초보 개발자한테 기능을 제공(단, 코드교육은 안하고)

def abssum(n1,n2):
    if n1 < 0:
        n1 = n1* -1
    if n2 < 0:
        n2 = n2* -1
    result = n1+n2
    return result

# 초보 개발자는 변수를 만들어야 하고, 함수를 적절히 사용해야 하고, print까지 시켜줘야 한다
result1=abssum(-1,3)
print(result1)

#============================================================================
# 함수는 def, 클래스는 class
class 회사프로그램:
    n1 = 0      # 클래스 안에 있는 변수 == 멤버변수
    n2 = 0
    # 멤버함수 : 메서드<- 클래스 안에 있는 함수(매개변수 가장 앞에 self라는 매개변수를 만들어 놓아야 함)안채움, self는 메서드 고정매개변수로 사용할때 채우지 않음 --> 즉 사용안함
    def abssum(self,n1,n2):
        if n1 < 0:          # 지역변수 : 함수 안에 있는 변수
            n1 = n1* -1
        if n2 < 0:
            n2 = n2* -1
        self.n1 = n1        #self.n1 : 매개변수의 n1
        self.n2 = n2        #n2 : 지역변수의 n2
        result = n1+n2
        return result
    def last(self):         #사실상 매개변수가 없는 메서드, (self)는 함수가 아니라 메서드라는 표시
        print(self.n1+self.n2)

# 객체화 : 클래스를 변수로 만든다 (*꼭 해야함)
# 1. 클래스를 변수로 만든다 
s = 회사프로그램()
# 2. abssum을 사용한다, 숫자 2개를 ()안에 적을 것
s.abssum(3,5)
# 3. last를 사용한다
s.last()

# class == 변수와 함수를 묶는 기술
